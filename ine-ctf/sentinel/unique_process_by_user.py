import re

def parse_log_file(file_path):
    user_processes = {}
    current_user = None
    current_process = None

    # Regex patterns to identify user and process lines
    user_pattern = re.compile(r"String: 2\s*:\s*(.+)")
    process_pattern = re.compile(r"String: (6|9|14)\s*:\s*(.+\.(exe|ps1))")

    with open(file_path, 'r') as file:
        for line in file:
            # Check for user name line
            user_match = user_pattern.search(line)
            if user_match:
                current_user = user_match.group(1).strip()
                if current_user not in user_processes:
                    user_processes[current_user] = set()

            # Check for process path line
            process_match = process_pattern.search(line)
            if process_match:
                current_process = process_match.group(2).strip()
                if current_user:
                    user_processes[current_user].add(current_process)

    return user_processes

def write_output(user_processes, output_file_path):
    with open(output_file_path, 'w') as file:
        for user, processes in user_processes.items():
            file.write(f"{user} has run the following unique processes:\n")
            for process in processes:
                file.write(f"  {process}\n")
            file.write("\n")

# Example usage
log_file_path = 'security.log'
output_file_path = 'unique_user_processes.txt'

# Parse the log file
user_processes = parse_log_file(log_file_path)

# Write the output to a file
write_output(user_processes, output_file_path)

print(f"Unique processes per user have been saved to {output_file_path}.")
