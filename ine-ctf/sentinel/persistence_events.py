import re

def parse_log_file(file_path):
    with open(file_path, 'r') as file:
        logs = file.read()
    
    events = re.split(r'Event number\s*:\s*\d+', logs)[1:]  # Split logs into events
    filtered_events = []

    for event in events:
        if re.search(r'Event identifier\s*:\s*0x00001250 \(4688\)', event) or \
           re.search(r'Event identifier\s*:\s*0x00001259 \(4697\)', event) or \
           re.search(r'Event identifier\s*:\s*0x00001BA1 \(7045\)', event) or \
           re.search(r'Event identifier\s*:\s*0x00001234 \(4672\)', event) or \
           re.search(r'Event identifier\s*:\s*0x00001233 \(4663\)', event):
            filtered_events.append(event)

    return filtered_events

def extract_event_details(events):
    details = []
    for event in events:
        event_id = re.search(r'Event identifier\s*:\s*0x[0-9A-F]+ \((\d+)\)', event).group(1)
        process_path = re.search(r'String: 6\s*:\s*(.+)', event).group(1)
        details.append((event_id, process_path))

    return details

def write_to_file(events, output_file):
    with open(output_file, 'w') as file:
        for event_id, path in events:
            file.write(f"Event ID {event_id}: {path}\n")

# Usage example
log_file_path = 'security.log'
output_file_path = 'filtered_persistence_events.txt'

events = parse_log_file(log_file_path)
event_details = extract_event_details(events)
write_to_file(event_details, output_file_path)

print(f"Filtered event details have been saved to {output_file_path}.")
