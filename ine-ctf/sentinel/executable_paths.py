import re

def parse_log_file(file_path):
    # Regex to capture executable paths (simple version focusing on typical paths)
    executable_path_pattern = re.compile(r"([a-zA-Z]:\\(?:[^\\]+\\)*[^\\]+\.exe)", re.IGNORECASE)
    
    # Set to store unique executable paths
    unique_executable_paths = set()

    # Read the log file
    with open(file_path, 'r') as file:
        for line in file:
            # Search for executable paths in each line
            matches = executable_path_pattern.findall(line)
            for match in matches:
                # Add each found path to the set
                unique_executable_paths.add(match)

    return unique_executable_paths

def write_unique_paths(paths, output_file_path):
    # Write unique executable paths to a file
    with open(output_file_path, 'w') as file:
        for path in sorted(paths):
            file.write(f"{path}\n")

# Example usage
log_file_path = 'security.log'
output_file_path = 'unique_executable_paths.txt'

# Parse the log file
unique_paths = parse_log_file(log_file_path)

# Write the unique executable paths to a file
write_unique_paths(unique_paths, output_file_path)

print(f"Unique executable paths have been extracted and saved to {output_file_path}.")
